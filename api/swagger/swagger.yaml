swagger: '2.0'
info:
  title: Peale Foundation API
  description: Peale Foundation APIs descriptions
  version: "1.0.0"
host: nvp-api-dev.ballastlane.com
schemes:
  - https
basePath: /v1
produces:
  - application/json
securityDefinitions:
  accessToken:
    type: "apiKey"
    name: "authorization"
    in: "header"
paths:
  /signin:
    put:
      summary: User signin.
      description: Sign in using the provided email and password combination.
      parameters:
      - name: UserCredentials
        in: body
        description: Username or Email account and credentials.
        required: true
        schema:
          $ref: '#/definitions/UserCredentials'
      tags:
      - Session
      responses:
        201:
          description: Session created
          schema:
            $ref: '#/definitions/SessionNew'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /signup:
    post:
      summary: User signup.
      description: Sign up using the provided username/email, password and password confirm.
      parameters:
      - name: UserCredentialsSignUp
        in: body
        description: Username or Email account, Password and Password Confirm.
        required: true
        schema:
          $ref: '#/definitions/UserCredentialsSignUp'
      tags:
      - Session
      responses:
        201:
          description: Account created successfully.
          schema:
            $ref: '#/definitions/SessionNew'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /forgot-password:
    post:
      summary: Forgot password
      description: This action attempts to recovery password for one user account with the email/username provided.
      parameters:
      - name: UsernameForgotPassword
        in: body
        description: Username/Email for forgot password recovery.
        required: true
        schema:
          $ref: '#/definitions/UsernameForgotPassword'
      tags:
      - Session
      responses:
        201:
          description: An email has been sent, please check your inbox.
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


  /refresh-token:
    post:
      summary: Refresh Token
      description:  Verify token is valid and if it expired, sign new token(with old tokens payload) and response it.
      security:
        - accessToken: []
      tags:
      - Session
      responses:
        201:
          description: Token and refresh token are generated successfully.
          schema:
            $ref: '#/definitions/SessionNew'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /sermons:
    get:
      summary: List of all sermons.
      description: Retrieve all sermons data.
      security:
        - accessToken: []
      tags:
      - Sermons
      responses:
        200:
          description: All sermons retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/Sermons'
        401:
          description: Unauthorized request.
          schema:
            $ref: '#/definitions/Error'

  /sermons/{id}:
    put:
      summary: Increase views count, mark a sermon as played.
      description: Increase views count and if bearer token exist, mark a Sermon as played by a current user.
      security:
        - accessToken: []
      parameters:
      - in: path
        name: id
        description: The sermon id.
        type: string
        required: true
      tags:
      - Sermons
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'


  /tags:
    get:
      summary: Show all tags availables
      description: Retrieve tags data
      tags:
      - Tags
      responses:
        200: 
          description: All tags retrieved successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/TagsComplete'
        401:
          description: Unexpected error
          schema:
            $ref: '#definitions/Error'

  /tags/{id}:
    get:
      summary: Show one tag.
      description: Tag retrieved successfully.
      parameters:
      - in: path
        name: id
        description: The tag id.
        type: string
        required: true
      tags:
      - Tags
      responses:
        200: 
          description: Tag retrieved successfully.
          schema:
            type: object
            $ref: '#/definitions/TagsComplete'
        401:
          description: Unexpected error
          schema:
            $ref: '#definitions/Error'

  /sermons/{id}/vote:
    post:
      summary: Vote for tags
      description: Vote for one or three tags per sermon
      security:
        - accessToken: []
      parameters:
      - in: path
        name: id
        description: Sermon ID
        type: string
        required: true
      - in: body
        name: tag
        description: Array of Tag ID's
        required: true
        schema:
          $ref: '#/definitions/voteTag'
      tags:
      - Tags
      responses:
        200: 
          description: Tag voted successfully.
        default:
          description: Unexpected error
          schema:
            $ref: '#definitions/Error'


  /sermons/{id}/comments:
    get:
      summary: Show all comments by sermon
      description: Retrieve all comments by sermon id.
      tags:
      - Comments
      parameters:
      - in: path
        name: id
        description: The sermon id.
        type: number
        required: true
      responses:
        200: 
          description: Commentary has been updated successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/Comments'
        401:
          description: Unauthorized request.
          schema:
            $ref: '#definitions/Error'
    post:
      summary: Create comment for the sermon
      description: Create comment for the sermon.
      security:
        - accessToken: []
      parameters:
      - in: path
        name: id
        description: The sermon id.
        type: number
        required: true
      - in: body
        name: commentary
        description: The commentary for the sermon
        required: true
        schema:
          $ref: '#/definitions/CommentPost'
      tags:
      - Comments
      responses:
        200:
          description: Comment created successfully
          schema: 
            $ref: '#definitions/Comments'
        default:
          description: Unexpected error
          schema:
            $ref: '#definitions/Error'
  
  /sermons/{id}/comments/{commentId}:
    put:
      summary: Update comment for the sermon
      description: Update comment for the sermon.
      security:
        - accessToken: []
      parameters:
      - in: path
        name: id
        description: The sermon id.
        type: string
        required: true
      - in: path
        name: commentId
        description: The comment id.
        type: string
        required: true
      - in: body
        name: commentary
        description: The commentary for the sermon
        required: true
        schema:
          $ref: '#/definitions/CommentPost'
      tags:
      - Comments
      responses:
        200:
          description: Comment updated successfully
          schema:
            $ref: '#definitions/Comments'
        default:
          description: Unexpected error
          schema:
            $ref: '#definitions/Error'
    
    delete:
      summary: Delete comment for the sermon
      description: Delete comment for the sermon.
      security:
        - accessToken: []
      parameters:
      - in: path
        name: id
        description: The sermon id.
        type: string
        required: true
      - in: path
        name: commentId
        description: The comment id.
        type: string
        required: true
      tags:
      - Comments
      responses:
        200:
          description: Comment destroyed successfully
        default:
          description: Unexpected error
          schema:
            $ref: '#definitions/Error'


  /sermons/{id}/favorite:
    post:
      summary: Add one sermon to my favorites list.
      description: Add one sermon to my favorites list.
      security:
        - accessToken: []
      parameters:
      - in: path
        name: id
        description: The sermon id.
        type: string
        required: true
      tags:
      - Favorites
      responses:
        200:
          description: Sermon successfully added to my favorites.
        201:
          description: Sermon already added to my favorites.
        401:
          description: Unauthorized request.

    delete:
      summary: Remove this sermon to favorite list.
      description: Remove this sermon to favorite list.
      security:
        - accessToken: []
      parameters:
      - in: path
        name: id
        description: The sermon id.
        type: string
        required: true
      tags:
      - Favorites
      responses:
        200:
          description: Sermon successfully removed from my favorites.
        404:
          description: Sermon is not added to my favorites.
        401:
          description: Unauthorized request.

  /sermons/favorite:
    get:
      summary: retrieve all sermons from my favorite list.
      description: retrieve all sermons from my favorite list.
      security:
        - accessToken: []
      tags:
      - Favorites
      responses:
        200:
          description: All favorites successfully retrieved.
          schema:
            type: array
            items:
              $ref: '#/definitions/Sermons'
        401:
          description: Unauthorized request.
          schema:
            $ref: '#/definitions/Error'

definitions:

  Sermons:
    type: object
    properties:
      createdAt:
        type: number
        format: timestamp
        description: Created at value, on timestamp.
      updatedAt:
        type: number
        format: timestamp
        description: Updated at value, on timestamp.
      id:
        type: number
        description: Sermon ID, is unique value.
      fileName:
        type: string
        description: File Name of Sermon, is unique value.
      date:
        type: string
        format: date
      title:
        type: string
        description: Tile of Sermon.
      description: 
        type: string
        description: A little description for Sermon file.
      bibleVerse:
        type: string
      bibleVerseText: 
        type: string
      package:
        type: string
      views:
        type: number
        description: Number of times the Sermon has been seen.
      played:
        type: boolean
        description: Indicates whether the sermon has been seen or not.
      isFavorite:
        type: boolean
        description: Indicates whether the sermon is favorite or not.
      comments: 
        type: number
        description: Count value from comments for one sermon.
      tags:
        type: array
        items:
          $ref: '#definitions/Tags'
        description: Associated tags.
      media:
        type: object
        $ref: '#definitions/Media'
        description: Multimedia data.

  Comments:
    type: object
    properties:
      createdAt:
        type: number
        format: timestamp
        description: Created at value, on timestamp.
      updatedAt:
        type: number
        format: timestamp
        description: Updated at value, on timestamp.
      id:
        type: number
        description: Comment ID, is unique value.
      commentary:
        type: string
      author:
        type: object
        $ref: '#definitions/Author'
      sermon:
        type: number
        description: Sermon ID

  Author:
    type: object
    properties:
      createdAt:
        type: number
        format: timestamp
      updatedAt:
        type: number
        format: timestamp  
      id:
        type: number
      username:
        type: string
      firstName: 
        type: string
      lastName: 
        type: string

  Tags:
    type: object
    properties:
      id:
        type: number
      name:
        type: string

  TagsComplete:
    type: object
    properties:
      createdAt:
        type: number
        format: timestamp
        description: Created at value, on timestamp.
      updatedAt:
        type: number
        format: timestamp
        description: Updated at value, on timestamp.
      id:
        type: number
      name:
        type: string
      description:
        type: string

  Media:
    type: object
    properties:
      url:
        type: string
      type:
        type: string
      duration:
        type: number

  Sermon:
    type: object
    properties:
      sermon:
        type: object
        description: Sermons object

  CommentPost:
    type: object
    properties:
      commentary:
        type: string
        description: Comment string

  voteTag:
    type: object
    properties:
      tag:
        type: array
        description: Array of tags to be voted
        default: []

  UserCredentials:
    type: object
    properties:
      username:
        type: string
        description: User's username
      password:
        type: string
        description: User's password

  UserCredentialsSignUp:
    type: object
    properties:
      username:
        type: string
        description: User's username
        required: true
      password:
        type: string
        description: User's password
        required: true
      confirmPassword:
        type: string
        description: User's password confirm
        required: true
      firstName:
        type: string
        required: true
      lastName:
        type: string
        required: true

  UsernameForgotPassword:
    type: object
    properties:
      username:
        type: string
        description: User's username

  SessionNew:
    type: object
    properties:
      user:
        type: object
        properties:
          createdAt:
            type: number
            format: timestamp
            description: Created at value, on timestamp.
          updatedAt:
            type: number
            format: timestamp
            description: Updated at value, on timestamp.
          id:
            type: number
            description: Sermon ID, is unique value.
          username:
            type: string
          firstName:
            type: string
          lastName:
            type: string
      token:
        type: string
        description: User session token
        format: jwt
      refreshToken:
        type: string
        description: User refresh token
        format: jwt

  Error:
    type: object
    properties:
      statusCode:
        type: integer
        format: int32
      message:
        type: string
      error:
        type: string